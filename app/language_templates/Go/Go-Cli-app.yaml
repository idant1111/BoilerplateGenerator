cli_app:
  src:
    main.go: |
      package main

      import (
        "flag"
        "fmt"
      )

      func main() {
        name := flag.String("name", "World", "a name to say hello to")
        flag.Parse()

        fmt.Printf("Hello, %s!\n", *name)
      }
  config:
    docker-compose.yml: |
      version: '3.8'

      services:
        cli:
          build: .
          volumes:
            - .:/app
          environment:
            - GO_ENV=development
    Dockerfile: |
      FROM golang:1.18

      WORKDIR /app

      COPY go.mod .
      COPY go.sum .

      RUN go mod download

      COPY . .

      RUN go build -o cli-app .

      CMD ["./cli-app"]
  go.mod: |
    module cliapp

    go 1.18
  go.sum: |
    # Go module dependencies (autogenerated)
  README.md: |
    # Go CLI Application

    This is a comprehensive Go command-line application that includes Docker deployment configurations.

    ## Setup and Running

    1. Run `go mod tidy` to install dependencies.
    2. Run `go run main.go --name=YourName` to execute the command-line application.
    3. Alternatively, you can use Docker:
       - Build and run the Docker container with `docker-compose up --build`.
