rails_app:
  src:
    config:
      database.yml: |
        default: &default
          adapter: sqlite3
          pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
          timeout: 5000

        development:
          <<: *default
          database: db/development.sqlite3

        test:
          <<: *default
          database: db/test.sqlite3

        production:
          <<: *default
          database: db/production.sqlite3
    config.ru: |
      require_relative 'config/environment'

      run Rails.application
  config:
    docker-compose.yml: |
      version: '3.8'

      services:
        web:
          build: .
          command: bundle exec rails s -b '0.0.0.0'
          volumes:
            - .:/app
          ports:
            - "3000:3000"
          environment:
            - RAILS_ENV=development
    Dockerfile: |
      FROM ruby:2.7

      RUN apt-get update -qq && apt-get install -y nodejs postgresql-client

      WORKDIR /app

      COPY Gemfile /app/Gemfile
      COPY Gemfile.lock /app/Gemfile.lock

      RUN bundle install

      COPY . /app

      EXPOSE 3000

      CMD ["rails", "server", "-b", "0.0.0.0"]
    k8s:
      deployment.yaml: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: rails-app
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: rails-app
          template:
            metadata:
              labels:
                app: rails-app
            spec:
              containers:
              - name: rails-app
                image: rails-app:latest
                ports:
                - containerPort: 3000
      service.yaml: |
        apiVersion: v1
        kind: Service
        metadata:
          name: rails-app-service
        spec:
          type: LoadBalancer
          ports:
          - port: 80
            targetPort: 3000
          selector:
            app: rails-app
  Gemfile: |
    source 'https://rubygems.org'

    gem 'rails', '~> 7.0.0'
  Gemfile.lock: |
    # Gem dependencies (autogenerated)
  README.md: |
    # Rails Application

    This is a comprehensive Ruby on Rails application that includes Docker and Kubernetes deployment configurations.

    ## Setup and Running

    1. Run `bundle install` to install dependencies.
    2. Run `rails db:migrate` to set up the database.
    3. Run `rails server` to start the application.
    4. Alternatively, you can use Docker:
       - Build and run the Docker container with `docker-compose up --build`.
    5. Kubernetes (K8s) deployment:
       - Use the files in the `config/k8s` directory to deploy the app to a Kubernetes cluster.
