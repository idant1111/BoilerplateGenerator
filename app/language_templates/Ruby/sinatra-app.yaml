sinatra_app:
  src:
    app.rb: |
      require 'sinatra'

      get '/' do
        'Hello World!'
      end
    config.ru: |
      require './app'
      run Sinatra::Application
  config:
    docker-compose.yml: |
      version: '3.8'

      services:
        web:
          build: .
          command: bundle exec rackup config.ru -p 4567 -o '0.0.0.0'
          volumes:
            - .:/app
          ports:
            - "4567:4567"
          environment:
            - RACK_ENV=development
    Dockerfile: |
      FROM ruby:2.7

      WORKDIR /app

      COPY Gemfile /app/Gemfile
      COPY Gemfile.lock /app/Gemfile.lock

      RUN bundle install

      COPY . /app

      EXPOSE 4567

      CMD ["bundle", "exec", "rackup", "config.ru", "-o", "0.0.0.0"]
    k8s:
      deployment.yaml: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: sinatra-app
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: sinatra-app
          template:
            metadata:
              labels:
                app: sinatra-app
            spec:
              containers:
              - name: sinatra-app
                image: sinatra-app:latest
                ports:
                - containerPort: 4567
      service.yaml: |
        apiVersion: v1
        kind: Service
        metadata:
          name: sinatra-app-service
        spec:
          type: LoadBalancer
          ports:
          - port: 80
            targetPort: 4567
          selector:
            app: sinatra-app
  Gemfile: |
    source 'https://rubygems.org'

    gem 'sinatra', '~> 2.1.0'
  Gemfile.lock: |
    # Gem dependencies (autogenerated)
  README.md: |
    # Sinatra Application

    This is a comprehensive Sinatra application that includes Docker and Kubernetes deployment configurations.

    ## Setup and Running

    1. Run `bundle install` to install dependencies.
    2. Run `ruby app.rb` to start the application.
    3. Alternatively, you can use Docker:
       - Build and run the Docker container with `docker-compose up --build`.
    4. Kubernetes (K8s) deployment:
       - Use the files in the `config/k8s` directory to deploy the app to a Kubernetes cluster.
