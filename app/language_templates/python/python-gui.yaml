python-gui_app:
  gui_app:
    src:
      gui:
        __init__.py: |
          import tkinter as tk
          from tkinter import ttk
          from .frames import MainFrame

          class Application(tk.Tk):
              def __init__(self):
                  super().__init__()

                  self.title("My GUI Application")
                  self.geometry("400x300")

                  main_frame = MainFrame(self)
                  main_frame.pack(fill=tk.BOTH, expand=True)

          if __name__ == '__main__':
              app = Application()
              app.mainloop()
        frames:
          __init__.py: ""
          main_frame.py: |
            import tkinter as tk
            from tkinter import ttk

            class MainFrame(ttk.Frame):
                def __init__(self, parent):
                    super().__init__(parent)

                    self.label = ttk.Label(self, text="Hello, World!")
                    self.label.pack(pady=20)

                    self.button = ttk.Button(self, text="Click Me!", command=self.on_button_click)
                    self.button.pack()

                def on_button_click(self):
                    self.label.config(text="Button clicked!")
      utils:
        __init__.py: ""
        helpers.py: |
          def format_message(message):
              return message.upper()
    tests:
      __init__.py: ""
      test_helpers.py: |
        from gui.utils.helpers import format_message

        def test_format_message():
            assert format_message("hello") == "HELLO"
    main.py: |
      from gui import Application

      if __name__ == '__main__':
          app = Application()
          app.mainloop()
    requirements.txt: |
      pytest==7.3.1
    README.md: |
      # GUI Application

      This is a template for a graphical user interface (GUI) application using Tkinter.

      ## Setup and Running

      1. Clone the repository
      2. Run the application:
         - With Docker: `docker-compose up`
         - Or locally: 
           - Create a virtual environment: `python -m venv venv`
           - Activate the virtual environment:
             - On Windows: `venv\Scripts\activate`
             - On Unix or MacOS: `source venv/bin/activate`
           - Install the requirements: `pip install -r requirements.txt`
           - Run the application: `python main.py`

      ## Running Tests

      Run the tests using pytest: `pytest`

    Dockerfile: |
      FROM python:3.11-slim-buster

      WORKDIR /app

      COPY requirements.txt requirements.txt
      RUN pip install --no-cache-dir -r requirements.txt

      COPY . .

      CMD ["python", "main.py"]

    docker-compose.yml: |
      version: '3.8'

      services:
        gui:
          build: .
          environment:
            - GUI_ENV=development
          volumes:
            - .:/app
